description<br />
<br />
&#39;<a href="http://localhost/keyword/%E3%82%AC%E3%82%A6%E3%82%B9%EF%BC%9D%E3%83%AB%E3%82%B8%E3%83%A3%E3%83%B3%E3%83%89%E3%83%AB%E3%81%AE%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0">ガウス＝ルジャンドルのアルゴリズム</a>&#39;は円周率を計算する際に用いられる数学の反復計算アルゴリズムである。円周率を計算するものの中では非常に収束が速く、200<a href="http://localhost/keyword/9%E5%B9%B4">9年</a>にこの式を用いて2,576,980,370,000桁（約2兆6000億桁）の計算がされた。<br />
<br />
このアルゴリズムはカール・フリードリヒ・ガウスとアドリアン＝マリ・ルジャンドルがそれぞれ別個に研究したものである。これは2つの数値の算術幾何平均を求めるために、それぞれの数値を算術平均（相加平均）と幾何平均（相乗平均）で置き換えていくものである。<br />
<br />
== アルゴリズム ==<br />
これによる円周率の計算方法は以下の通りである。<br />
<br />
=== 初期値の設定 ===<br />
:a_0 =1\\qquad b_0 =\\frac{1}{\\sqrt{2}} \\qquad t_0 =\\frac{1}{4} \\qquad p_0 =1<br />
<br />
=== 反復式 ===<br />
&#39;&#39;a&#39;&#39;, &#39;&#39;b&#39;&#39; が希望する精度（桁数）になるまで以下の計算を繰り返す。小数第&#39;&#39;n&#39;&#39;位まで求めるとき　log &#39;&#39;n&#39;&#39; 回程度の反復でよい。<br />
:\\begin{align}<br />
a_{n+1} &amp;=\\frac{a_n +b_n}{2} \\\\<br />
b_{n+1} &amp;=\\sqrt{a_n b_n} \\\\<br />
t_{n+1} &amp;=t_n -p_n(a_n - a_{n+1})^2 \\\\<br />
p_{n+1} &amp;= 2p_n<br />
\\end{align}<br />
<br />
===  の算出 ===<br />
円周率  は、&#39;&#39;a&#39;&#39;, &#39;&#39;b&#39;&#39;, &#39;&#39;t&#39;&#39; を用いて以下のように近似される。<br />
:\\pi \\approx \\frac{(a+b)^2}{4t}<br />
最初の3回の反復で得られる数値（最後の桁は真値とは異なる）は以下の通りである。<br />
:3.140\\dots<br />
:3.14159264\\dots<br />
:3.1415926535897932382\\dots<br />
この反復プロセスは自然収束し、反復1回について前に正常だった桁の2倍の桁の数値までが収束する。ガウス自身、この式で4回まで反復を行い12桁まで正しいことを確認したことが知られている。<br />
<br />
== 関連項目 ==<br />
*スーパー<br />
<br />
<br />
<br />
<br />
Category:円周率<br />
Category:アルゴリズム<br />
Category:数学に関する記事<br />
