description<br />
&#39;<a href="http://localhost/keyword/%E9%80%A3%E6%83%B3%E9%85%8D%E5%88%97">連想配列</a>&#39;（れんそうはいれつ、）とは、コンピュータプログラミングにおいて、添え字にスカラー数値以外のデータ型(文字列型等)も使用できる配列である。抽象データ型のひとつ。&#39;連想リスト&#39;、&#39;連想コンテナ&#39;、&#39;辞書&#39;（あるいはカタカナで&#39;ディクショナリ&#39; ）、&#39;ハッシュ&#39;（）、&#39;マップ&#39;（）とも呼ばれる。<br />
<br />
歴史的には、最初に  の連想リストとして広く認知された。その後、 で table として、 で<a href="http://localhost/keyword/%E9%80%A3%E6%83%B3%E9%85%8D%E5%88%97">連想配列</a>として実装したことで、その潜在能力がさらに広く知られるようになった。現在、 など一部の言語では、添え字にはどのようなデータでも使えるものもある。<br />
<br />
== データ構造 ==<br />
<a href="http://localhost/keyword/%E9%80%A3%E6%83%B3%E9%85%8D%E5%88%97">連想配列</a>の実装に使われるデータ構造としては、主に平衡2分探索木（赤黒木やAVL木など）やハッシュテーブルがある。ほかにはB木や連想リスト、トライ木、基数木などが利用されることもある。純粋な<a href="http://localhost/keyword/%E9%80%A3%E6%83%B3%E9%85%8D%E5%88%97">連想配列</a>においてはキーの重複があってはならない。マップ（<a href="http://localhost/keyword/%E9%80%A3%E6%83%B3%E9%85%8D%E5%88%97">連想配列</a>）を拡張したマルチマップはキーが重複したデータも上書きせずに保持できるデータ構造である。<br />
<br />
<a href="http://localhost/keyword/%E9%80%A3%E6%83%B3%E9%85%8D%E5%88%97">連想配列</a>を一般化したデータ構造のひとつに&#39;マルチマップ&#39;（）があり、一つのキーに対して複数の値を格納することができる, pp. 389–397.。また別の一般化である&#39;双方向マップ&#39;(、、)はバインディング操作を双方向で行う（キーと値に全単射関係をもたせる）データコンテナである。双方向マップの値それぞれが重複のないキーに関連付けられなければならない。キーを引数に取る通常の<a href="http://localhost/keyword/%E9%80%A3%E6%83%B3%E9%85%8D%E5%88%97">連想配列</a>におけるlookup操作の他に値を引数にとるlookup操作が追加され、この操作は引数として与えられた値に関連付けられたキーを検索する。<br />
<br />
== よく用意される命令 ==<br />
純粋な<a href="http://localhost/keyword/%E9%80%A3%E6%83%B3%E9%85%8D%E5%88%97">連想配列</a>でのキー-値間の参照をバインディング（またはバインドとも）と呼ぶ。「バインディング」という語は新たな参照を作る過程に対しても用いられる。<br />
<br />
しばしば定義される操作は以下のようなものが挙げられる:..<br />
<br />
*&#39;Add&#39; or &#39;insert&#39;（追加）: 新しい(key, value)の対をコレクションに追加し、キーと値の間への新たな参照を追加する。この操作の引数はキーとそれに関連付けられる値である。<br />
* &#39;Reassign&#39; or &#39;replace&#39;（置換）: 既存の(key, value)対の値を書き換え、キーからの古い参照を新たな値への参照に置き換える。引数はinsertを行った時のキーと新たな値である。<br />
* &#39;Remove&#39; or &#39;delete&#39;（削除）: (key, value)対をコレクションから削除し、キーから値への参照を消去する。引数はコレクションから削除するキーのみ。<br />
* &#39;Lookup&#39; or &#39;get&#39;（検索）: キーに束縛されている値を取り出す。引数はキーであり、キー束縛された値が戻り値となる。もし値が見つからなければ<a href="http://localhost/keyword/%E9%80%A3%E6%83%B3%E9%85%8D%E5%88%97">連想配列</a>の実装の一部では例外をスローする。<br />
<br />
また、<a href="http://localhost/keyword/%E9%80%A3%E6%83%B3%E9%85%8D%E5%88%97">連想配列</a>はここで上げた以外の操作も含む。それは例えばキーの関連付けの数を特定したりすべてのキーを調べるためのイテレータを作成したりといったものである。このイテレータによって得られる参照の順序はしばしば不定となる。<br />
<br />
== <a href="http://localhost/keyword/%E9%80%A3%E6%83%B3%E9%85%8D%E5%88%97">連想配列</a>を標準で提供する主な言語 ==<br />
* <br />
*  &amp;mdash; 標準ライブラリのクラス std::map として提供されている。これはハッシュではなく二分木により実装されている。ハッシュを使いた std::unordered_map も提供される。<br />
* D言語<br />
*  () - すべてのオブジェクトが、文字列が添え字の<a href="http://localhost/keyword/%E9%80%A3%E6%83%B3%E9%85%8D%E5%88%97">連想配列</a>として扱われる。MapとWeakMap型だと添え字を任意のオブジェクトにすることができる。<br />
* Go &amp;mdash; map[keytype]valtype 型<br />
* <br />
*  &amp;mdash; 標準パッケージの, , , ,  で提供。その他  などでも提供。<br />
*  &amp;mdash; キーとデータで構成された cons セルcar, cdrと呼ばれる二つデータが組になった、2-タプルのデータ構造のリストを<a href="http://localhost/keyword/%E9%80%A3%E6%83%B3%E9%85%8D%E5%88%97">連想配列</a>として（car部をキーにcdr部をデータ、またはその逆）として使う関数（assoc, rassoc）が提供されている。<br />
* <br />
*  - System.Collections.Hashtable, System.Collections.Specialized.ListDictionary, System.Collections.Specialized.HybridDictionary, System.Collections.Generic.Dictionaryにて提供。(ただし Dictionary は CLR 2.0 以降) <br />
*  &amp;mdash; 結合配列 (Oracle Database 9i 以降)<br />
* <a href="http://localhost/keyword/PHP">PHP</a> - 配列と<a href="http://localhost/keyword/%E9%80%A3%E6%83%B3%E9%85%8D%E5%88%97">連想配列</a>の区別がない<br />
*  &amp;mdash; 「辞書型 (dictionary)」という名前で呼ばれる<br />
*  &amp;mdash; %ではじまる変数が<a href="http://localhost/keyword/%E9%80%A3%E6%83%B3%E9%85%8D%E5%88%97">連想配列</a>。要素には$hash{$key}としてアクセスする(通常の配列は@で宣言し、要素へは$array[$index]としてアクセス)。同言語で<a href="http://localhost/keyword/%E9%80%A3%E6%83%B3%E9%85%8D%E5%88%97">連想配列</a>を(その実装から)「ハッシュ」と呼び始めたことから、「ハッシュ」が<a href="http://localhost/keyword/%E9%80%A3%E6%83%B3%E9%85%8D%E5%88%97">連想配列</a>の別名として定着した。<br />
* <br />
*  &amp;mdash; 組み込みのクラス Hash で提供<br />
* <br />
* <br />
* <br />
* <br />
* <br />
<br />
== 脚注 ==<br />
<br />
<br />
== 関連項目 ==<br />
* ルックアップテーブル<br />
* メモ化<br />
<br />
<br />
<br />
<br />
Category:データ型<br />
