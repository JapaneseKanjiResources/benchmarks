description<br />
&#39;<a href="http://localhost/keyword/%E8%AA%A4%E3%82%8A%E6%A4%9C%E5%87%BA%E8%A8%82%E6%AD%A3">誤り検出訂正</a>&#39;（あやまりけんしゅつていせい）または&#39;エラー検出訂正&#39; (error detection and correction)とは、データに&#39;符号誤り&#39;（エラー）が発生した場合にそれを検出、あるいは検出し訂正（前方誤り訂正）することである。検出だけをする&#39;誤り検出&#39;または&#39;エラー検出&#39;と、検出し訂正する&#39;誤り訂正&#39;または&#39;エラー訂正&#39;を区別することもある。また改竄検出を含める場合も含めない場合もある。<a href="http://localhost/keyword/%E8%AA%A4%E3%82%8A%E6%A4%9C%E5%87%BA%E8%A8%82%E6%AD%A3">誤り検出訂正</a>により、記憶装置やデジタル通信・信号処理の信頼性が確保されている。<br />
== 誤り検出と誤り訂正 ==<br />
一般に<a href="http://localhost/keyword/%E8%AA%A4%E3%82%8A%E6%A4%9C%E5%87%BA%E8%A8%82%E6%AD%A3">誤り検出訂正</a>では、k 単位長（k ビット、k バイト など）の符号を、n = m + k 単位長の符号語に変換する。これを (n, k) 符号、あるいは、符号形式を添えて (n, k) ××符号などと呼ぶ（誤り訂正符号を特に&#39;ECC&#39;と略す）。符号語は、最小<a href="http://localhost/keyword/%E3%83%8F%E3%83%9F%E3%83%B3%E3%82%B0%E8%B7%9D%E9%9B%A2">ハミング距離</a>が d &gt; 1、つまり、互いに少なくとも d 単位が異なっていて、この冗長性を利用して前方誤り訂正が可能となる。dを添えて、 (n, k, d) 符号ともいう。<br />
<br />
適切な (n, k, d) 符号は、符号語あたり d - 1 単位の誤りを検出でき、[(d - 1) / 2] 単位（[ ] は床関数）の誤りを訂正できる。d ≦ 2 ならば、誤り訂正能力は [(d - 1) / 2] = 0 となり、単なる誤り検出となる。ただし、データの消失に対しては、つまり誤り位置がわかっているときは、d 単位の消失を訂正できる。これを特に消失訂正と呼ぶ。単なる誤り訂正も、最低 1 単位の消失訂正能力を持つ。<br />
<br />
たとえば、(2, 1, 2) 符号であるミラーリングは、<br />
* どちらかに誤りが起これば検出できるが、両方に起これば検出できない。（誤り検出能力1）<br />
* どちらか（どちらかはわからない）に誤りが起これば訂正できない。（誤り訂正能力0）<br />
* どちらかが消失すれば訂正できるが、両方に起これば訂正できない。（消失訂正能力1）<br />
となる。(3, 1, 3) 符号である三重ミラーリングでは、誤り検出能力と消失訂正能力が2となり、誤り訂正能力1も得る。<br />
<br />
双方向の通信では、前方誤り訂正ができなくても誤り検出さえできれば、送信者に再送を要求することで実質的に誤りを訂正できる。これを自動的におこなう仕組みを、自動再送要求 (ARQ, Automatic Repeat reQuest) と呼ぶ。<br />
<br />
== バースト誤りとランダム誤り ==<br />
誤りには、<br />
* 短い区間に多数の誤りが集中するバースト誤り<br />
* 散発的に単独で誤りが発生するランダム誤り<br />
の2種類がある。<br />
<br />
多くの誤り検出・訂正は、全体の誤り率が許容範囲でも、バースト誤りに対しては、1つのブロックに多くの誤りが集中するため、対応できない。そこで、符号の順序を入れ替え、同じブロックのデータを分散させ、バースト誤りが1つのブロックに集中しないようにする。この技術をインターリーブという。<br />
<br />
== 誤り補正 ==<br />
特に音声や映像など、人間の感覚に訴える信号のディジタル化されたデータで真の値から多少の誤差が許容される場合、誤り検出は可能でも誤り訂正が不可能（訂正能力を超えている）かまたは誤り訂正が実装されていないとき、元のデータ自身に含まれる冗長性を利用して欠落データを予測して置き換えることがある。これを特に&#39;誤り補正&#39;(error compensation)と呼んで区別する。補正されたデータは真の値と一致するとは限らないが、真の値から許容される誤差内にあると期待される。CDなどでは、誤り補正がデータ読み取り誤りに対する「最後の手段」として使われている。<br />
<br />
誤り補正では、一般には、近傍の標本に重み付けをした和、すなわちフィルタを畳み込んだ値を予測値（補正値）とする。特に、直前・直後の標本を使うものを、以下のように呼ぶ。<br />
: x_n = \\frac{1}{2} (x_{n - 1} + x_{n + 1}) - 平均値補間<br />
: x_n = x_{n - 1} \\, - 前値ホールド<br />
: x_n = x_{n + 1} \\, - 後値ホールド<br />
<br />
誤り補正は原信号自身に含まれる冗長性を使うため、データ圧縮、特に非可逆圧縮と同種の原理に基づいている。<br />
<br />
== 誤り検出・訂正の例 ==<br />
=== 誤り検出 ===<br />
* ブロック符号<br />
** 2重化<br />
*** バックアップ<br />
*** ミラーリング - RAID-1<br />
*** 一方向誤り訂正 (FEC, forward error correction)<br />
** パリティ符号（パリティ<a href="http://localhost/keyword/%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF">チェック</a>） - シリアル通信、RAID-3/4/5/6<br />
*** 垂直パリティ<a href="http://localhost/keyword/%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF">チェック</a> (VRC)<br />
*** 水平パリティ<a href="http://localhost/keyword/%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF">チェック</a> (LRC)<br />
** 定比率符号（l out of n 符号）<br />
** <a href="http://localhost/keyword/%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF">チェック</a>サム<br />
*** 群計数<a href="http://localhost/keyword/%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF">チェック</a><br />
*** Luhnアルゴリズム<br />
** 巡回符号<br />
*** 巡回冗長検査 (CRC) - フロッピーディスク、USB<br />
==== ハッシュ(参考) ====<br />
* 暗号学的ハッシュ関数<br />
** MD MD4 - MD5<br />
** Secure Hash Algorithm - SHA-1 - SHA-2 (SHA-224, SHA-256, SHA-384, SHA-512) - SHA-3<br />
<br />
=== 誤り訂正 ===<br />
* ブロック符号<br />
** 多重化<br />
*** 反復符号 (repetition code)<br />
** 縦横パリティ<br />
** ハミング符号 - RAM、RAID-2<br />
** 巡回符号<br />
*** 巡回ハミング符号<br />
*** ゴレイ符号<br />
**** 2元ゴレイ符号 (binary Golay code)<br />
*** BCH符号 - 自動車無線(43,31)、衛星ラジオ(63,56)<br />
**** リード・ソロモン符号（RS符号、RSC）<br />
***** CIRC（Cross-Interleaved Reed-Solomon Code）- CD<br />
***** リードソロモン積符号 (RSP符号) - DAT<br />
*** 差集合巡回符号<br />
**** 短縮化差集合巡回符号 - 文字放送(272,190)<br />
*** ファイア符号 - ハードディスク<br />
** 疎グラフ符号<br />
*** ターボ符号 (turbo code)<br />
*** 低密度パリティ検査符号 (LDPC) - 10GBASE-T (IEEE 802.3an)、Mobile WiMAX (IEEE 802.16e)<br />
* 畳み込み符号(convolutional code)<br />
** Hagelbarger code<br />
** 最尤復号符号、ビタビアルゴリズム(Viterbi Algorithm)<br />
<br />
== 関連項目 ==<br />
* 前方誤り訂正<br />
* 消失訂正<br />
* 改竄<br />
* 改竄検出<br />
* 認証<br />
* ガロア体<br />
* RAID<br />
* <a href="http://localhost/keyword/%E3%83%81%E3%82%A7%E3%83%83%E3%82%AF">チェック</a>ディジット<br />
* 冗長化<br />
<br />
<br />
<br />
<br />
*<br />
Category:通信工学<br />
Category:安全<br />
Category:数学に関する記事<br />
